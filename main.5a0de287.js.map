{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tbody","rows","querySelectorAll","converter","string","replace","sortCell","ev","titleIndex","target","closest","cellIndex","title","rowsForSorting","contains","innerText","sort","current","next","currentCellString","cells","nextCellString","localeCompare","currentCellNum","nextCellNum","convertedCurrentNum","forEach","row","removeChild","newRow","appendChild","addEventListener"],"mappings":";AAAA,aAgDC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9CD,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAQF,SAASC,cAAc,SAC/BE,EAAOD,EAAME,iBAAiB,MAIpC,SAASC,EAAUC,GACVA,OAAAA,EAAOC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAG9C,SAASC,EAASC,GACVC,IAAAA,EAAaD,EAAGE,OAAOC,QAAQ,MAAMC,UACrCC,EAAQL,EAAGE,OAAOC,QAAQ,MAC1BG,EAAqBZ,EAAAA,GAEvB,GAACW,GAAUf,EAAMiB,SAASF,GAA1B,CAIIA,OAAAA,EAAMG,WACP,IAAA,OACA,IAAA,WACHF,EAAeG,KAAK,SAACC,EAASC,GACtBC,IAAAA,EAAoBF,EAAQG,MAAMZ,GAAYO,UAC9CM,EAAiBH,EAAKE,MAAMZ,GAAYO,UAEvCI,OAAAA,EAAkBG,cAAcD,KAEzC,MAEG,IAAA,MACA,IAAA,SACHR,EAAeG,KAAK,SAACC,EAASC,GACtBK,IAAAA,EAAiBN,EAAQG,MAAMZ,GAAYO,UAC3CS,EAAcN,EAAKE,MAAMZ,GAAYO,UAIpCU,OAHqBtB,EAAUoB,GACbpB,EAAUqB,KAOzCvB,EAAKyB,QAAQ,SAAAC,GAAO3B,OAAAA,EAAM4B,YAAYD,KAEtCd,EAAea,QAAQ,SAAAG,GAAU7B,OAAAA,EAAM8B,YAAYD,MAzCrDhC,EAAMkC,iBAAiB,QAASzB","file":"main.5a0de287.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = tbody.querySelectorAll('tr');\n\nthead.addEventListener('click', sortCell);\n\nfunction converter(string) {\n  return string.replace('$', '').replace(',', '');\n}\n\nfunction sortCell(ev) {\n  const titleIndex = ev.target.closest('th').cellIndex;\n  const title = ev.target.closest('th');\n  const rowsForSorting = [...rows];\n\n  if (!title || !thead.contains(title)) {\n    return;\n  }\n\n  switch (title.innerText) {\n    case 'Name':\n    case 'Position':\n      rowsForSorting.sort((current, next) => {\n        const currentCellString = current.cells[titleIndex].innerText;\n        const nextCellString = next.cells[titleIndex].innerText;\n\n        return currentCellString.localeCompare(nextCellString);\n      });\n      break;\n\n    case 'Age':\n    case 'Salary':\n      rowsForSorting.sort((current, next) => {\n        const currentCellNum = current.cells[titleIndex].innerText;\n        const nextCellNum = next.cells[titleIndex].innerText;\n        const convertedCurrentNum = converter(currentCellNum);\n        const convertedNextNum = converter(nextCellNum);\n\n        return convertedCurrentNum - convertedNextNum;\n      });\n      break;\n  }\n\n  rows.forEach(row => tbody.removeChild(row));\n\n  rowsForSorting.forEach(newRow => tbody.appendChild(newRow));\n}\n"]}